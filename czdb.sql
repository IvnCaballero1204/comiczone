-- MySQL Script generated by MySQL Workbench
-- Mon Nov 16 23:29:53 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema comiczone
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema comiczone
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `comiczone` DEFAULT CHARACTER SET utf8 ;
USE `comiczone` ;

-- -----------------------------------------------------
-- Table `comiczone`.`tipo_empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`tipo_empleado` (
  `id_tipo` INT NOT NULL,
  `descripci√≥n` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_tipo`));


-- -----------------------------------------------------
-- Table `comiczone`.`sucursal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`sucursal` (
  `nombre` VARCHAR(30) NOT NULL,
  `id_sucursal` INT NOT NULL AUTO_INCREMENT,
  `direccion` VARCHAR(50) NOT NULL,
  `telefono` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id_sucursal`));


-- -----------------------------------------------------
-- Table `comiczone`.`empleados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`empleados` (
  `nombre` VARCHAR(40) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `fecha_ingreso` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `rfc` VARCHAR(13) NOT NULL,
  `telefono` VARCHAR(10) NOT NULL,
  `salario` FLOAT NOT NULL,
  `activo` INT NOT NULL,
  `sucursal` INT NOT NULL,
  `tipo_empleado` INT NOT NULL,
  `id_empleado` INT NOT NULL AUTO_INCREMENT,
  INDEX `itipo_empleado_idx` (`tipo_empleado` ASC) VISIBLE,
  INDEX `id_sucursal_idx` (`sucursal` ASC) VISIBLE,
  PRIMARY KEY (`id_empleado`),
  UNIQUE INDEX `id_empleado_UNIQUE` (`id_empleado` ASC) VISIBLE,
  UNIQUE INDEX `rfc_UNIQUE` (`rfc` ASC) VISIBLE,
  CONSTRAINT `itipo_empleado`
    FOREIGN KEY (`tipo_empleado`)
    REFERENCES `comiczone`.`tipo_empleado` (`id_tipo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `sucursal`
    FOREIGN KEY (`sucursal`)
    REFERENCES `comiczone`.`sucursal` (`id_sucursal`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `comiczone`.`transacciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`transacciones` (
  `id_transaccion` INT NOT NULL,
  `descripcion` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_transaccion`));


-- -----------------------------------------------------
-- Table `comiczone`.`permiso_empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`permiso_empleado` (
  `tipo` INT NOT NULL,
  `transaccion` INT NOT NULL,
  INDEX `id_empleado_idx` (`tipo` ASC) VISIBLE,
  INDEX `transaccion_id_idx` (`transaccion` ASC) VISIBLE,
  CONSTRAINT `tipo`
    FOREIGN KEY (`tipo`)
    REFERENCES `comiczone`.`tipo_empleado` (`id_tipo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `transaccion`
    FOREIGN KEY (`transaccion`)
    REFERENCES `comiczone`.`transacciones` (`id_transaccion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `comiczone`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`producto` (
  `id_producto` VARCHAR(10) NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `compania` VARCHAR(40) NOT NULL,
  `editorial` VARCHAR(40) NULL,
  `precio` FLOAT NOT NULL,
  `anio` DATE NULL,
  PRIMARY KEY (`id_producto`));


-- -----------------------------------------------------
-- Table `comiczone`.`producto_sucursal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`producto_sucursal` (
  `sucursal` INT NOT NULL,
  `producto` VARCHAR(10) NOT NULL,
  `existencia` INT NOT NULL,
  INDEX `producto_id_idx` (`producto` ASC) VISIBLE,
  INDEX `sucursal_id_idx` (`sucursal` ASC) VISIBLE,
  CONSTRAINT `producto_id`
    FOREIGN KEY (`producto`)
    REFERENCES `comiczone`.`producto` (`id_producto`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `sucursal_id`
    FOREIGN KEY (`sucursal`)
    REFERENCES `comiczone`.`sucursal` (`id_sucursal`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `comiczone`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`cliente` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `telefono` VARCHAR(10) NOT NULL,
  `nombre` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id_cliente`));


-- -----------------------------------------------------
-- Table `comiczone`.`nota_venta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`nota_venta` (
  `id_nota` INT NOT NULL AUTO_INCREMENT,
  `empleado` INT NOT NULL,
  `cliente` INT NOT NULL,
  `sucursal` INT NOT NULL,
  `fecha` DATETIME NOT NULL,
  `id_metodopago` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_nota`),
  INDEX `empleado_id_idx` (`empleado` ASC) VISIBLE,
  INDEX `cliente_id_idx` (`cliente` ASC) VISIBLE,
  INDEX `sucursal_idx` (`sucursal` ASC) VISIBLE,
  CONSTRAINT `empleado_id`
    FOREIGN KEY (`empleado`)
    REFERENCES `comiczone`.`empleados` (`id_empleado`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `cliente_id`
    FOREIGN KEY (`cliente`)
    REFERENCES `comiczone`.`cliente` (`id_cliente`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `sucursal_venta`
    FOREIGN KEY (`sucursal`)
    REFERENCES `comiczone`.`sucursal` (`id_sucursal`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `comiczone`.`detalle_nota`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`detalle_nota` (
  `id_detalle` INT NOT NULL,
  `producto` VARCHAR(10) NOT NULL,
  `cantidad` INT NOT NULL,
  `precio` FLOAT NOT NULL,
  INDEX `id_detalle_idx` (`id_detalle` ASC) VISIBLE,
  INDEX `producto_idx` (`producto` ASC) VISIBLE,
  CONSTRAINT `id_detalle`
    FOREIGN KEY (`id_detalle`)
    REFERENCES `comiczone`.`nota_venta` (`id_nota`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `producto`
    FOREIGN KEY (`producto`)
    REFERENCES `comiczone`.`producto` (`id_producto`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `comiczone`.`proveedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`proveedor` (
  `id_proveedor` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NOT NULL,
  `telefono` VARCHAR(10) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_proveedor`));


-- -----------------------------------------------------
-- Table `comiczone`.`compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`compra` (
  `id_compra` INT NOT NULL AUTO_INCREMENT,
  `proveedor` INT NOT NULL,
  `empleado` INT NOT NULL,
  `sucursal` INT NOT NULL,
  `fecha` DATETIME NOT NULL,
  PRIMARY KEY (`id_compra`),
  UNIQUE INDEX `id_compra_UNIQUE` (`id_compra` ASC) VISIBLE,
  INDEX `proveedor_idx` (`proveedor` ASC) VISIBLE,
  INDEX `empleado_idx` (`empleado` ASC) VISIBLE,
  INDEX `sucursal_idx` (`sucursal` ASC) VISIBLE,
  CONSTRAINT `proveedor`
    FOREIGN KEY (`proveedor`)
    REFERENCES `comiczone`.`proveedor` (`id_proveedor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `empleado`
    FOREIGN KEY (`empleado`)
    REFERENCES `comiczone`.`empleados` (`id_empleado`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `sucursal_compra`
    FOREIGN KEY (`sucursal`)
    REFERENCES `comiczone`.`sucursal` (`id_sucursal`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `comiczone`.`detalle_compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`detalle_compra` (
  `compra` INT NOT NULL,
  `producto` VARCHAR(10) NOT NULL,
  `cantidad` INT NOT NULL,
  `costo` FLOAT NOT NULL,
  INDEX `producto_idx` (`producto` ASC) VISIBLE,
  INDEX `compra_idx` (`compra` ASC) VISIBLE,
  CONSTRAINT `producto_compra`
    FOREIGN KEY (`producto`)
    REFERENCES `comiczone`.`producto` (`id_producto`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `compra`
    FOREIGN KEY (`compra`)
    REFERENCES `comiczone`.`compra` (`id_compra`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `comiczone`.`corte_caja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `comiczone`.`corte_caja` (
  `id_corte` INT NOT NULL AUTO_INCREMENT,
  `fecha` DATETIME NOT NULL,
  `empleado` INT NOT NULL,
  `status` INT NOT NULL,
  `observaciones` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_corte`),
  INDEX `empleado_idx` (`empleado` ASC) VISIBLE,
  CONSTRAINT `empleado_corte`
    FOREIGN KEY (`empleado`)
    REFERENCES `comiczone`.`empleados` (`id_empleado`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

#CREATE USER 'admin' IDENTIFIED BY 'admin';

GRANT ALL ON `comiczone`.* TO 'admin';
GRANT SELECT ON TABLE `comiczone`.* TO 'admin';
GRANT SELECT, INSERT, TRIGGER ON TABLE `comiczone`.* TO 'admin';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `comiczone`.* TO 'admin';
GRANT ALL ON `comiczone`.* TO 'admin';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `comiczone`.`tipo_empleado`
-- -----------------------------------------------------
START TRANSACTION;
USE `comiczone`;
INSERT INTO `comiczone`.`tipo_empleado` (`id_tipo`, `descripci√≥n`) VALUES (1, 'gerente');
INSERT INTO `comiczone`.`tipo_empleado` (`id_tipo`, `descripci√≥n`) VALUES (2, 'encargado almacen');
INSERT INTO `comiczone`.`tipo_empleado` (`id_tipo`, `descripci√≥n`) VALUES (3, 'encargado tienda');
INSERT INTO `comiczone`.`tipo_empleado` (`id_tipo`, `descripci√≥n`) VALUES (4, 'vendedor');

COMMIT;


-- -----------------------------------------------------
-- Data for table `comiczone`.`empleados`
-- -----------------------------------------------------
START TRANSACTION;
USE `comiczone`;
INSERT INTO `comiczone`.`empleados` (`nombre`, `email`, `password`, `fecha_ingreso`, `rfc`, `telefono`, `salario`, `activo`, `sucursal`, `tipo_empleado`, `id_empleado`) VALUES ('IVAN CABALLERO', 'gerencia@cz.com', 'admin', '2020-11-16 11:15:00', 'GACG950412FQ3', '3322615065', 35000, 2, 1, 1, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `comiczone`.`transacciones`
-- -----------------------------------------------------
START TRANSACTION;
USE `comiczone`;
INSERT INTO `comiczone`.`transacciones` (`id_transaccion`, `descripcion`) VALUES (1, 'registrar usuario');
INSERT INTO `comiczone`.`transacciones` (`id_transaccion`, `descripcion`) VALUES (2, 'borrar usuario');
INSERT INTO `comiczone`.`transacciones` (`id_transaccion`, `descripcion`) VALUES (3, 'registrar proveedor');
INSERT INTO `comiczone`.`transacciones` (`id_transaccion`, `descripcion`) VALUES (4, 'borrar proveedor');
INSERT INTO `comiczone`.`transacciones` (`id_transaccion`, `descripcion`) VALUES (5, 'ver usuarios');
INSERT INTO `comiczone`.`transacciones` (`id_transaccion`, `descripcion`) VALUES (6, 'compra de mercancia');
INSERT INTO `comiczone`.`transacciones` (`id_transaccion`, `descripcion`) VALUES (7, 'corte de caja');
INSERT INTO `comiczone`.`transacciones` (`id_transaccion`, `descripcion`) VALUES (8, 'registro de clientes');
INSERT INTO `comiczone`.`transacciones` (`id_transaccion`, `descripcion`) VALUES (9, 'registro de venta');
INSERT INTO `comiczone`.`transacciones` (`id_transaccion`, `descripcion`) VALUES (10, 'visualizar existencias');

COMMIT;


-- -----------------------------------------------------
-- Data for table `comiczone`.`permiso_empleado`
-- -----------------------------------------------------
START TRANSACTION;
USE `comiczone`;
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (1, 1);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (1, 2);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (1, 3);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (1, 4);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (1, 5);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (1, 6);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (3, 7);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (3, 8);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (3, 9);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (3, 10);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (4, 7);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (4, 9);
INSERT INTO `comiczone`.`permiso_empleado` (`tipo`, `transaccion`) VALUES (4, 10);

COMMIT;

